When would you want to create a remote repository rather than keeping all your work local?
-->you would want to especially when you more than 1 person is working on a project.  having
one place to update a project will keep everyone up to date with what is going on..cool.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
-->Because being able to pull manually gives you the freedom to continue down a path experimentally without it being interrupted by
other updates.  then when you're ready you can bring other branches if you want.

Forking:
This basically means cloning.  But cloning the repository to your GitHub account.  You can accomplish this other ways but
this is the most efficient.

What is the benefit of having a copy of the last known state of the remote stored locally?
-->this will let you branch off if you decide to fetch an updated version from GitHub.  Then you can continue down your
local version and if you want to merge with the fetch update and yours you can.  This will be good for collaboration.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
-->you could use tools like dropbox, svn, good docs.  however these all have advantages and disadvantages.  you could just 
use a simple shared drive on a network.  The learning curve on these would all be lower than GitHub.  But the control would be less.
GitHub seems to have an advantage in the long run due to it's control.  the complexity is there.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
-->when you are experimenting on an idea or component of a project.
